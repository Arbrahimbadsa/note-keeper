{"version":3,"sources":["firebase/index.js","components/LoginView.js","context/index.js","components/Camera.js","components/Editor.js","components/PreviewView.js","components/CameraView.js","components/NotesView.js","components/Showcase.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LoginViewWrapper","styled","div","LoginButton","button","Input","input","LoginView","handleLoginWithGoogle","a","provider","auth","GoogleAuthProvider","signInWithPopup","alert","message","handleAnnonymousLogin","signInAnonymously","placeholder","onClick","LoginContext","createContext","CameraWrapper","Video","video","Button","Camera","onSnap","useRef","useEffect","navigator","mediaDevices","enumerateDevices","length","facingMode","getUserMedia","aspectRatio","stream","current","srcObject","playsInline","autoPlay","ref","photo","c","document","createElement","height","window","innerHeight","width","innerWidth","getContext","drawImage","toDataURL","getImage","img","src","EditorWrapper","EditorControl","Editor","image","onProceed","onCancel","imgRef","useState","x","y","unit","crop","setCrop","completedCrop","setCompletedCrop","croppedImage","setCroppedImage","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","onImageLoaded","onChange","onComplete","PreviewImage","PreviewWrapper","Icon","Control","PreviewView","onRetake","onShowEditor","onImageSave","wrapper","tValue","setTvalue","style","transform","setTimeout","NavigateBefore","Edit","NavigateNext","CameraViewWrapper","HideCamera","db","database","CameraView","onCameraHide","showPreview","setShowPreview","setImage","showEditor","setShowEditor","data","setData","userId","useContext","uid","ArrowBack","imageUid","uuiv4","imgUrl","imagesRef","imageData","name","set","NotesContainer","NoteName","p","Note","NoteImage","Svg","svg","Circle","circle","NotesView","showLightbox","setShowLighbox","lightboxData","setLightboxData","setImageData","isLoading","setIsLoading","once","exists","val","values","Object","fetchImages","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","map","d","large","medium","hideDownload","alt","showRotate","onClose","Wrapper","ShowcaseWrapper","HeaderContainer","SiteName","h3","HeaderMeta","Menu","MenuItem","TakePicture","CircledImage","SearchContainer","SearchInput","Showcase","onUserLogOut","user","showCamera","setShowCamera","photoURL","AppWrapper","App","setUser","onAuthStateChanged","console","log","Provider","value","signOut","then","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f18f7e69.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nconst config = {\r\n  apiKey: \"AIzaSyAZhvmZYFIEwZxtqf6E_vmGmNkZF_oUJAE\",\r\n  authDomain: \"note-keeper-f1de8.firebaseapp.com\",\r\n  databaseURL: \"https://note-keeper-f1de8-default-rtdb.firebaseio.com\",\r\n  projectId: \"note-keeper-f1de8\",\r\n  storageBucket: \"note-keeper-f1de8.appspot.com\",\r\n  messagingSenderId: \"722421639421\",\r\n  appId: \"1:722421639421:web:c68fc9ec78af8a360c7694\",\r\n};\r\nfirebase.initializeApp(config);\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport firebase from \"../firebase\";\r\nimport \"firebase/auth\";\r\nconst LoginViewWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background: #eee;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst LoginButton = styled.button`\r\n  height: 35px;\r\n  width: 200px;\r\n  background: #1ecbe1;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  border: none;\r\n  margin-bottom: 5px;\r\n  border-radius: 20px;\r\n  &:hover {\r\n    box-shadow: 0 5px 10px rgba(154, 160, 185, 0.05),\r\n      0 15px 40px rgba(166, 173, 201, 0.2);\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  height: 35px;\r\n  width: 30vw;\r\n  min-width: 200px;\r\n  background: #fff;\r\n  border-radius: 20px;\r\n  border: none;\r\n  padding: 15px;\r\n  margin: 0 0 10px 0;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst LoginView = () => {\r\n  const handleLoginWithGoogle = async () => {\r\n    try {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      await firebase.auth().signInWithPopup(provider);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n  const handleAnnonymousLogin = async () => {\r\n    await firebase.auth().signInAnonymously();\r\n  };\r\n  return (\r\n    <LoginViewWrapper>\r\n      <Input placeholder=\"Enter your username\" />\r\n      <Input placeholder=\"Enter your password\" />\r\n      <LoginButton>Login</LoginButton>\r\n      <LoginButton onClick={handleLoginWithGoogle}>\r\n        Login With Google\r\n      </LoginButton>\r\n      <LoginButton onClick={handleAnnonymousLogin}>\r\n        Login Annonymously\r\n      </LoginButton>\r\n    </LoginViewWrapper>\r\n  );\r\n};\r\nexport default LoginView;\r\n","import { createContext } from \"react\";\r\nconst LoginContext = createContext(null);\r\nexport default LoginContext;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nconst CameraWrapper = styled.div`\r\n  height: 100%;\r\n  width: 100vw;\r\n`;\r\nconst Video = styled.video`\r\n  postition: absolute;\r\n  height: 100%;\r\n  width: 100vw;\r\n  left: 0;\r\n  top: 0;\r\n  object-fit: fill;\r\n  pointer-events: none;\r\n`;\r\nconst Button = styled.button`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50%;\r\n  background: #fff;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  cursor: pointer;\r\n  border: none;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    border: 5px solid gray;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst Camera = ({ onSnap }) => {\r\n  const video = useRef(null);\r\n  const getImage = (video) => {\r\n    const c = document.createElement(\"canvas\");\r\n    c.height = window.innerHeight;\r\n    c.width = window.innerWidth;\r\n    const ctx = c.getContext(\"2d\");\r\n    ctx.drawImage(video, 0, 0, c.width, c.height);\r\n    return c.toDataURL();\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const facingMode =\r\n          (await (await navigator.mediaDevices.enumerateDevices()).length) <= 1\r\n            ? \"user\"\r\n            : \"environment\";\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          video: {\r\n            facingMode,\r\n            aspectRatio: 20 / 9,\r\n          },\r\n        });\r\n        video.current.srcObject = stream;\r\n      } catch (error) {\r\n        //..\r\n      }\r\n    })();\r\n  }, []);\r\n  const snap = () => {\r\n    const photo = getImage(video.current);\r\n    const img = document.createElement(\"img\");\r\n    img.src = photo;\r\n    onSnap && onSnap({ height: img.height, width: img.width, photo });\r\n  };\r\n  return (\r\n    <CameraWrapper>\r\n      <Video playsInline autoPlay ref={video} />\r\n      <Button onClick={snap} />\r\n    </CameraWrapper>\r\n  );\r\n};\r\nCamera.propTypes = {\r\n  onSnap: PropTypes.func,\r\n};\r\nexport default Camera;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport styled from \"styled-components\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nconst EditorWrapper = styled.div`\r\n  height: 100%;\r\n  width: 100vw;\r\n  position: absolute;\r\n  top: 0;\r\n  z-index: 20;\r\n`;\r\nconst Button = styled.button`\r\n  background: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  padding: 8px 10px;\r\n  opacity: 0.9;\r\n  margin-right: 5px;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst EditorControl = styled.div`\r\n  height: auto;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 0;\r\n  padding: 20px;\r\n  user-select: none;\r\n`;\r\nconst Editor = ({ image, onProceed, onCancel }) => {\r\n  const imgRef = useRef(null);\r\n  const [crop, setCrop] = useState({\r\n    x: 35,\r\n    y: 35,\r\n    unit: \"%\",\r\n    width: 30,\r\n    height: 30,\r\n  });\r\n  const [completedCrop, setCompletedCrop] = useState(null);\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n  const handleImageLoad = (img) => {\r\n    imgRef.current = img;\r\n  };\r\n  const handleProceed = () => {\r\n    if (croppedImage) onProceed(croppedImage);\r\n    else onProceed(image);\r\n  };\r\n  useEffect(() => {\r\n    if (!completedCrop || !imgRef.current) {\r\n      return;\r\n    }\r\n    const canvas = document.createElement(\"canvas\");\r\n    const image = imgRef.current;\r\n    const crop = completedCrop;\r\n\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const pixelRatio = window.devicePixelRatio;\r\n\r\n    canvas.width = crop.width * pixelRatio;\r\n    canvas.height = crop.height * pixelRatio;\r\n\r\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    ctx.imageSmoothingQuality = \"high\";\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n    const croppedImage = canvas.toDataURL();\r\n    setCroppedImage(croppedImage);\r\n  }, [completedCrop]);\r\n  return (\r\n    <EditorWrapper>\r\n      <ReactCrop\r\n        src={image}\r\n        onImageLoaded={handleImageLoad}\r\n        crop={crop}\r\n        onChange={(c) => setCrop(c)}\r\n        onComplete={(c) => setCompletedCrop(c)}\r\n      />\r\n      <EditorControl>\r\n        <Button onClick={handleProceed}>Proceed</Button>\r\n        <Button onClick={onCancel}>Cancel</Button>\r\n      </EditorControl>\r\n    </EditorWrapper>\r\n  );\r\n};\r\nEditor.propTypes = {\r\n  image: PropTypes.string,\r\n  onProceed: PropTypes.func,\r\n  onCancel: PropTypes.func\r\n};\r\nexport default Editor;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Edit, NavigateBefore, NavigateNext } from \"@material-ui/icons\";\r\nconst PreviewImage = styled.img`\r\n  height: auto;\r\n  width: auto;\r\n  top: 0;\r\n  z-index: 10;\r\n`;\r\nconst Button = styled.button`\r\n  height: 30px;\r\n  width: 80px;\r\n  border-radius: 5px;\r\n  background: #000;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst PreviewWrapper = styled.div`\r\n  height: 100%;\r\n  width: 100vw;\r\n  background: red;\r\n  position: absolute;\r\n  top: 0;\r\n  transform: translateX(100%);\r\n  transition: 0.3s;\r\n`;\r\nconst Icon = styled.div`\r\n  height: 50px;\r\n  width: 50px;\r\n  color: #fff;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #fff;\r\n    color: #000;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst Control = styled.div`\r\n  position: absolute;\r\n  z-index: 50;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  height: 100%;\r\n  align-items: flex-end;\r\n  padding: 50px;\r\n`;\r\nconst PreviewView = ({ image, onRetake, onShowEditor, onImageSave }) => {\r\n  const wrapper = useRef(null);\r\n  const [tValue, setTvalue] = useState(\"0\");\r\n  useEffect(() => (wrapper.current.style.transform = `translate(${tValue})`), [\r\n    tValue,\r\n  ]);\r\n  return (\r\n    <PreviewWrapper ref={wrapper}>\r\n      <PreviewImage src={image} />\r\n      <Control>\r\n        <Icon\r\n          onClick={() => {\r\n            setTvalue(\"100%\");\r\n            setTimeout(() => {\r\n              onRetake();\r\n            }, 300); // unmount after 300ms so that the animation can play it's role..\r\n          }}\r\n        >\r\n          <NavigateBefore />\r\n        </Icon>\r\n        <Icon onClick={onShowEditor}>\r\n          <Edit />\r\n        </Icon>\r\n        <Icon onClick={onImageSave}>\r\n          <NavigateNext />\r\n        </Icon>\r\n      </Control>\r\n    </PreviewWrapper>\r\n  );\r\n};\r\nexport default PreviewView;\r\n","import Camera from \"../components/Camera\";\r\nimport Editor from \"../components/Editor\";\r\nimport styled from \"styled-components\";\r\nimport { useContext, useState } from \"react\";\r\nimport { v4 as uuiv4 } from \"uuid\";\r\nimport firebase from \"../firebase\";\r\nimport LoginContext from \"../context\";\r\nimport PreviewView from \"./PreviewView\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nconst CameraViewWrapper = styled.div`\r\n  height: 100%;\r\n  width: 100vw;\r\n  overflow: hidden;\r\n`;\r\nconst HideCamera = styled.div`\r\n  height: 50px;\r\n  width: 50px;\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  color: #fff;\r\n`;\r\n\r\n////////////////// Firebase Refs /////////////////////\r\nconst db = firebase.database();\r\n\r\nconst CameraView = ({ onCameraHide }) => {\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [image, setImage] = useState(null);\r\n  const [showEditor, setShowEditor] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const { uid: userId } = useContext(LoginContext);\r\n  const handleSnap = (data) => {\r\n    setImage(data.photo);\r\n    setData(data);\r\n    setShowPreview(true);\r\n  };\r\n  const handleRetake = () => {\r\n    setShowPreview(false);\r\n  };\r\n  const handleOnProceed = (croppedImage) => {\r\n    setImage(croppedImage);\r\n    setShowEditor(false);\r\n    setShowPreview(true);\r\n  };\r\n  const handleShowEditor = () => {\r\n    setShowEditor(true);\r\n    setShowPreview(false);\r\n    setImage(data.photo);\r\n  };\r\n  const handleEditorCancel = () => {\r\n    setShowEditor(false);\r\n    setShowPreview(true);\r\n  };\r\n  const handleImageSave = () => {\r\n    const imageUid = uuiv4();\r\n    const imgUrl = `images/${userId}/${imageUid}`;\r\n    const imagesRef = db.ref(imgUrl);\r\n    const imageData = {\r\n      name: \"Test name for image.\",\r\n      image: image,\r\n      uid: imageUid,\r\n    };\r\n    imagesRef.set(imageData, () => {\r\n      onCameraHide();\r\n    });\r\n  };\r\n  return (\r\n    <CameraViewWrapper>\r\n      <Camera onSnap={handleSnap} />\r\n      <HideCamera onClick={onCameraHide}>\r\n        <ArrowBack />\r\n      </HideCamera>\r\n      {showPreview && (\r\n        <PreviewView\r\n          image={image}\r\n          onRetake={handleRetake}\r\n          onShowEditor={handleShowEditor}\r\n          onImageSave={handleImageSave}\r\n        />\r\n      )}\r\n      {showEditor && (\r\n        <Editor\r\n          image={image}\r\n          onProceed={handleOnProceed}\r\n          onCancel={handleEditorCancel}\r\n        />\r\n      )}\r\n    </CameraViewWrapper>\r\n  );\r\n};\r\n\r\nexport default CameraView;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Lightbox } from \"react-modal-image\";\r\nimport firebase from \"../firebase\";\r\nimport LoginContext from \"../context\";\r\nconst NotesContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding-top: 15px;\r\n  height: auto;\r\n  user-select: none;\r\n`;\r\nconst NoteName = styled.p`\r\n  color: #fff;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  opacity: 0;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 600;\r\n`;\r\nconst Note = styled.div`\r\n  height: 200px;\r\n  flex-grow: 1;\r\n  margin: 2px;\r\n  background: #fff;\r\n  cursor: pointer;\r\n  position: relative;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  &:hover ${NoteName} {\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst NoteImage = styled.img`\r\n  height: 200px;\r\n  object-fit: cover;\r\n  max-width: 100%;\r\n  min-width: 100%;\r\n  vertical-align: bottom;\r\n`;\r\nconst Svg = styled.svg`\r\n  height: 45px;\r\n  width: 45px;\r\n  stroke: blue;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\nconst Circle = styled.circle`\r\n  stroke-dasharray: 180;\r\n  stroke-dashoffset: 0;\r\n  -webkit-transform-origin: center;\r\n  -ms-transform-origin: center;\r\n  transform-origin: center;\r\n  @keyframes turn {\r\n    0% {\r\n      stroke-dashoffset: 180;\r\n    }\r\n\r\n    50% {\r\n      stroke-dashoffset: 45;\r\n      transform: rotate(135deg);\r\n    }\r\n\r\n    100% {\r\n      stroke-dashoffset: 180;\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  -webkit-animation: turn 1.35s ease-in-out infinite;\r\n  animation: turn 1.35s ease-in-out infinite;\r\n`;\r\n\r\n////////////////// Firebase Refs /////////////////////\r\nconst db = firebase.database();\r\n\r\nconst NotesView = () => {\r\n  const [showLightbox, setShowLighbox] = useState(false);\r\n  const [lightboxData, setLightboxData] = useState(null);\r\n  const [imageData, setImageData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { uid } = useContext(LoginContext);\r\n  const handleShowLightbox = (data) => {\r\n    setShowLighbox(!showLightbox);\r\n    setLightboxData(data);\r\n  };\r\n  const hideLightBox = () => {\r\n    setShowLighbox(!showLightbox);\r\n  };\r\n  // fetch images from firebase database\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      const imagesRef = db.ref(`images/${uid}`);\r\n      const data = await imagesRef.once(\"value\");\r\n      if (data.exists()) {\r\n        // if data exists in database\r\n        const val = data.val();\r\n        const values = Object.values(val);\r\n        setImageData(values);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    fetchImages();\r\n  }, [uid]);\r\n  return (\r\n    <NotesContainer>\r\n      {isLoading && (\r\n        <Svg viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <Circle\r\n            fill=\"none\"\r\n            strokeWidth=\"6\"\r\n            strokeLinecap=\"round\"\r\n            cx=\"33\"\r\n            cy=\"33\"\r\n            r=\"25\"\r\n          ></Circle>\r\n        </Svg>\r\n      )}\r\n      {imageData &&\r\n        !isLoading &&\r\n        imageData.map((d) => (\r\n          <Note onClick={() => handleShowLightbox(d)}>\r\n            <NoteImage src={d && d.image} />\r\n            <NoteName>{d && d.name}</NoteName>\r\n          </Note>\r\n        ))}\r\n      {showLightbox && lightboxData && (\r\n        <Lightbox\r\n          large={lightboxData.image}\r\n          medium={lightboxData.image}\r\n          hideDownload={true}\r\n          alt={lightboxData.name}\r\n          showRotate={true}\r\n          onClose={hideLightBox}\r\n        />\r\n      )}\r\n    </NotesContainer>\r\n  );\r\n};\r\nexport default NotesView;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LoginContext from \"../context\";\r\nimport CameraView from \"./CameraView\";\r\nimport NotesView from \"./NotesView\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"firebase/auth\";\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  overflow: hidden;\r\n`;\r\nconst ShowcaseWrapper = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  background: #eee;\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  font-family: \"Montserrat\", sans-serif;\r\n`;\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 15px;\r\n  align-items: center;\r\n  background: #fff;\r\n  box-shadow: 0 1px 1.5px rgba(0, 0, 0, 0.1);\r\n  user-select: none;\r\n  position: fixed;\r\n  z-index: 50;\r\n  @media screen and (max-width: 720px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\nconst SiteName = styled.h3`\r\n  color: #1ecbe1;\r\n`;\r\nconst HeaderMeta = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.button`\r\n  border: none;\r\n  color: #fff;\r\n  background: #1ecbe1;\r\n  padding: 8px 15px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\nconst Menu = styled.div`\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  padding: 0 15px;\r\n  @media screen and (max-width: 720px) {\r\n    display: none;\r\n  }\r\n`;\r\nconst MenuItem = styled.div`\r\n  margin: 0 10px;\r\n  color: #6e6d7a;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #1ecbe1;\r\n  }\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n`;\r\nconst TakePicture = styled.div`\r\n  height: 50px;\r\n  width: 50px;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background: #1ecbe1;\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n`;\r\nconst CircledImage = styled.img`\r\n  height: 35px;\r\n  width: 35px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n`;\r\nconst SearchInput = styled.input`\r\n  height: 35px;\r\n  background: #fff;\r\n  flex: 1;\r\n  border: none;\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 1px 1.5px rgba(0, 0, 0, 0.1);\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Showcase = ({ onUserLogOut }) => {\r\n  const user = useContext(LoginContext);\r\n  const [showCamera, setShowCamera] = useState(false);\r\n  const handleTakePicture = () => setShowCamera(!showCamera);\r\n  const handleHideCamera = () => setShowCamera(!showCamera);\r\n  return (\r\n    <Wrapper>\r\n      {!showCamera ? (\r\n        <ShowcaseWrapper>\r\n          <HeaderContainer>\r\n            <SiteName>Note Keeper</SiteName>\r\n            <Menu>\r\n              <MenuItem>Bangla</MenuItem>\r\n              <MenuItem>English</MenuItem>\r\n              <MenuItem>Math</MenuItem>\r\n              <MenuItem>Chemistry</MenuItem>\r\n              <MenuItem>Biology</MenuItem>\r\n              <MenuItem>Physics</MenuItem>\r\n              <MenuItem>I&Ct</MenuItem>\r\n            </Menu>\r\n            <HeaderMeta>\r\n              <CircledImage src={user && user.photoURL} />\r\n              <Button onClick={onUserLogOut}>Logout</Button>\r\n            </HeaderMeta>\r\n          </HeaderContainer>\r\n          <SearchContainer>\r\n            <SearchInput placeholder=\"Enter keyword i.e. integration, straight line..\" />\r\n            <Button>Search</Button>\r\n          </SearchContainer>\r\n          <NotesView />\r\n          <TakePicture onClick={handleTakePicture}>+</TakePicture>\r\n        </ShowcaseWrapper>\r\n      ) : (\r\n        <CameraView onCameraHide={handleHideCamera} />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\nShowcase.propTypes = {\r\n  onUserLogOut: PropTypes.func.isRequired,\r\n};\r\nexport default Showcase;\r\n","import { useEffect, useState } from \"react\";\nimport LoginView from \"./components/LoginView\";\nimport Showcase from \"./components/Showcase\";\nimport LoginContext from \"./context\";\nimport styled from \"styled-components\";\nimport firebase from \"./firebase\";\nconst AppWrapper = styled.div``;\nconst App = () => {\n  const [user, setUser] = useState(null);\n  const handleLogOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(null);\n      });\n  };\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // signed in successful\n        setUser(user);\n        console.log(user);\n      } else {\n        // if logout happens\n        setUser(null);\n      }\n    });\n  }, []);\n  return (\n    <LoginContext.Provider value={user}>\n      <AppWrapper>\n        {!user && <LoginView />}\n        {user && <Showcase onUserLogOut={handleLogOut} />}\n      </AppWrapper>\n    </LoginContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}