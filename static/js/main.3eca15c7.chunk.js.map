{"version":3,"sources":["components/Camera.js","App.js","index.js"],"names":["CameraWrapper","styled","div","Video","video","Button","button","Camera","onSnap","onShowPreview","useRef","useEffect","a","navigator","mediaDevices","enumerateDevices","length","facingMode","getUserMedia","stream","current","srcObject","playsInline","autoPlay","ref","onClick","photo","c","document","createElement","height","window","innerHeight","width","innerWidth","getContext","drawImage","toDataURL","getImage","PreviewImage","img","PreviewWrapper","Control","App","useState","showPreview","setShowPreview","image","setImage","className","imageSrc","src","ReactDOM","render","StrictMode","getElementById"],"mappings":"4OAEMA,EAAgBC,IAAOC,IAAV,+DAIbC,EAAQF,IAAOG,MAAV,4JASLC,EAASJ,IAAOK,OAAV,4UAyDGC,EAtCA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OACVJ,GADsC,EAApBK,cACVC,iBAAO,OASrBC,qBAAU,WACR,sBAAC,8BAAAC,EAAA,+EAEmCC,UAAUC,aAAaC,mBAF1D,8BAE8EC,OAF9E,8BAEuF,GAFvF,sBAE2F,OAF3F,6BAEoG,cAFpG,eAESC,EAFT,eAGwBJ,UAAUC,aAAaI,aAAa,CACvDd,MAAO,CACLa,gBALP,QAGSE,EAHT,OAQGf,EAAMgB,QAAQC,UAAYF,EAR7B,2GAAD,KAaC,IAKH,OACE,mCACE,eAACnB,EAAD,WACE,cAACG,EAAD,CAAOmB,aAAW,EAACC,UAAQ,EAACC,IAAKpB,IACjC,cAACC,EAAD,CAAQoB,QARD,WACX,IAAMC,EAxBS,SAACtB,GAChB,IAAMuB,EAAIC,SAASC,cAAc,UAKjC,OAJAF,EAAEG,OAASC,OAAOC,YAClBL,EAAEM,MAAQF,OAAOG,WACLP,EAAEQ,WAAW,MACrBC,UAAUhC,EAAO,EAAG,EAAGuB,EAAEM,MAAON,EAAEG,QAC/BH,EAAEU,YAkBKC,CAASlC,EAAMgB,SAC7BZ,GAAUA,EAAOkB,YC1Dfa,EAAetC,IAAOuC,IAAV,0FAMZnC,EAASJ,IAAOK,OAAV,mMAYNmC,EAAiBxC,IAAOC,IAAV,qIAQdwC,EAAUzC,IAAOC,IAAV,iLAoCEyC,MA3Bf,WAAgB,IAAD,EACyBC,oBAAS,GADlC,mBACNC,EADM,KACOC,EADP,OAEaF,mBAAS,MAFtB,mBAENG,EAFM,KAECC,EAFD,KAUb,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,CAAQzC,OATO,SAAC0C,GAClBF,EAASE,GACTJ,GAAe,MAQZD,GACC,eAACJ,EAAD,WACE,cAACF,EAAD,CAAcY,IAAKJ,IACnB,eAACL,EAAD,WACE,cAAC,EAAD,CAAQjB,QAVG,WACnBqB,GAAe,IASP,oBACA,cAAC,EAAD,mBACA,cAAC,EAAD,gCCpDZM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,W","file":"static/js/main.3eca15c7.chunk.js","sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nconst CameraWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n`;\r\nconst Video = styled.video`\r\n  postition: absolute;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  left: 0;\r\n  top: 0;\r\n  object-fit: fill;\r\n  pointer-events: none;\r\n`;\r\nconst Button = styled.button`\r\n  height: 50px;\r\n  width: 50px;\r\n  border-radius: 50%;\r\n  background: #fff;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  cursor: pointer;\r\n  border: none;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    border: 5px solid gray;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst Camera = ({ onSnap, onShowPreview }) => {\r\n  const video = useRef(null);\r\n  const getImage = (video) => {\r\n    const c = document.createElement(\"canvas\");\r\n    c.height = window.innerHeight;\r\n    c.width = window.innerWidth;\r\n    const ctx = c.getContext(\"2d\");\r\n    ctx.drawImage(video, 0, 0, c.width, c.height);\r\n    return c.toDataURL();\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const facingMode = await (await navigator.mediaDevices.enumerateDevices()).length <=1 ? 'user' : 'environment';\r\n        const stream = await navigator.mediaDevices.getUserMedia({\r\n          video: {\r\n            facingMode\r\n          }\r\n        });\r\n        video.current.srcObject = stream;\r\n      } catch (error) {\r\n        //..\r\n      }\r\n    })();\r\n  }, []);\r\n  const snap = () => {\r\n    const photo = getImage(video.current);\r\n    onSnap && onSnap(photo);\r\n  };\r\n  return (\r\n    <>\r\n      <CameraWrapper>\r\n        <Video playsInline autoPlay ref={video} />\r\n        <Button onClick={snap} />\r\n      </CameraWrapper>\r\n    </>\r\n  );\r\n};\r\nexport default Camera;\r\n","import Camera from \"./components/Camera\";\nimport styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nconst PreviewImage = styled.img`\n  height: 100vh;\n  width: 100vw;\n  top: 0;\n  z-index: 10;\n`;\nconst Button = styled.button`\n  height: 30px;\n  width: 80px;\n  border-radius: 5px;\n  background: #000;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nconst PreviewWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: absolute;\n  top: 0;\n  z-index: 15;\n  background: red;\n`;\nconst Control = styled.div`\n  position: absolute;\n  bottom: 0;\n  padding: 25px 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\nfunction App() {\n  const [showPreview, setShowPreview] = useState(false);\n  const [image, setImage] = useState(null);\n  const handleSnap = (imageSrc) => {\n    setImage(imageSrc);\n    setShowPreview(true);\n  };\n  const handleRetake = () => {\n    setShowPreview(false);\n  }\n  return (\n    <div className=\"App\">\n      <Camera onSnap={handleSnap} />\n      {showPreview && (\n        <PreviewWrapper>\n          <PreviewImage src={image} />\n          <Control>\n            <Button onClick={handleRetake}>Retake</Button>\n            <Button>Edit</Button>\n            <Button>Proceed</Button>\n          </Control>\n        </PreviewWrapper>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}